/*
 *  Copyright (C) 2012 Marvell Technology Group Ltd.
 *  Author: Haojian Zhuang <haojian.zhuang@marvell.com>
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License version 2 as
 *  publishhed by the Free Software Foundation.
 */

/dts-v1/;
/memreserve/ 0x00000000 0x00100000;	/* OBM (1MB) */
/memreserve/ 0x09000000 0x01000000;	/* ION (16MB)*/
/memreserve/ 0x17000000 0x01800000;	/* Frame buffer (24MB) */
#include "pxa1U88.dtsi"

/ {
	model = "Marvell PXA1U88 DKB Development Board";
	compatible = "mrvl,pxa1U88-dkb", "mrvl,pxa1U88";

	chosen {
		bootargs = "console=ttyS0,115200 root=/dev/nfs nfsroot=192.168.1.100:/nfsroot/ ip=192.168.1.101:192.168.1.100::255.255.255.0::eth0:on";
	};

	memory {
		reg = <0x00000000 0x10000000>;
	};

	gic: interrupt-controller@d1dfa000 {
		status = "okay";
	};

	timer {
		status = "okay";
	};

	pmu {
		status = "okay";
	};

	soc {
		clock: clock-controller {
			status = "okay";
		};

		iommu@c0010000 {  /* iommu in vpu */
			status = "okay";
		};

		ddr@c0100000 {  /* DDR memory controller */
			status = "okay";
		};

		axi@d4200000 {	/* AXI */
			coda7542: coda7542@d420d000 {
				marvell,sram-internal = <1>;
				marvell,nv21_support = <1>;
				status = "okay";
			};

			intc: wakeupgen@d4282000 {
				status = "okay";
			};

			usbphy: usbphy@d4207000 {
				status = "okay";
			};

			udc: udc@d4208100 {
				status = "okay";
			};

			ehci: ehci@d4208100 {
				status = "okay";
			};

			otg: otg@d4208100 {
				status = "okay";
			};

			dsi: dsi@d420b800 {
				marvell,phy-name = "mmp_dsi1";
				marvell,plat-path-name = "mmp_pnpath";
				marvell,dsi-lanes = <4>;
				marvell,burst-mode = <2>;
				marvell,hbp-en;
				status = "okay";
			};

			vdma: vdma@d4209000 {
				marvell,vdma-num = <2>;
				status = "okay";
				vdma1 {
					marvell,vdma-id = <0>;
					marvell,sram-size = <30720>;
					marvell,is_vid = <0>;
				};
				vdma2 {
					marvell,vdma-id = <2>;
					marvell,sram-size = <30720>;
					marvell,is_vid = <1>;
				};
			};

			apical: apical@d420b400 {
				marvell,apical-num = <1>;
				status = "okay";
			};

			disp: disp@d420b000 {
				marvell,disp-name = "disp_name";
				marvell,path-num = <1>;
				status = "okay";
				path1 {
					marvell,path-name = "mmp_pnpath";
					marvell,overlay-num = <2>;
					marvell,overlay-table = <0>, <1>;
					marvell,output-type = <1>;
					marvell,path-config = <0x10>;
					marvell,link-config = <0x1>;
					1080p {
						disp1_clksrc = "pll1_416m";
						dsipll_clksrc = "pll1_832m";
						pn_sclk_clksrc = "dsi_pll";
					};
					720p {
						disp1_clksrc = "pll1_416m";
						dsipll_clksrc = "pll3";
						pn_sclk_clksrc = "disp1";
					};
					qhd {
						disp1_clksrc = "pll1_416m";
						dsipll_clksrc = "pll3";
						pn_sclk_clksrc = "disp1";
					};
				};
			};

			fb0: fbbase {
				marvell,fb-name = "mmp-fb";
				marvell,path-name = "mmp_pnpath";
				marvell,overlay-id = <1>;
				marvell,default-pixfmt = <0x108>;
				marvell,buffer-num = <3>;
				marvell,fb-mem = <0x17000000>;
				status = "okay";
			};

			fb1: fboverlay {
				marvell,fb-name = "mmp-fb-overlay";
				marvell,path-name = "mmp_pnpath";
				marvell,overlay-id = <0>;
				status = "okay";
			};

			/* eMMC */
			sdh3: sdh@d4281000 {
				pinctrl-names = "default";
				pinctrl-0 = <&sdh3_pmx_func1 &sdh3_pmx_func2>;
				bus-width = <8>;
				mrvl,clk-delay-cycles = <0x0>;
				non-removable;
				status = "okay";
			};

			/* SD card */
			sdh1: sdh@d4280000 {
				pinctrl-names = "default";
				pinctrl-0 = <&sdh1_pmx_func1 &sdh1_pmx_func2 &sdh1_pmx_func3 &sdh1_pmx_func4>;
				vqmmc-supply	= <&ldo5>;
				vmmc-supply	= <&ldo4>;
				cd-gpio = <&gpio 91 0>;
				bus-width = <4>;
				mrvl,clk-delay-cycles = <0x1f>;
				wp-inverted;
				status = "okay";
			};

			/* SDIO */
			sdh2: sdh@d4280800 {
				pinctrl-names = "default";
				pinctrl-0 = <&sdh2_pmx_func1 &sdh2_pmx_func2 &sdh2_pmx_func3 &sdh2_pmx_func4>;
				bus-width = <4>;
				mrvl,clk-delay-cycles = <0x0>;
				status = "okay";
			};

			ccic1: ccic@d420a000 {
			   pinctrl-names = "default";
			   pinctrl-0 = <&ccic1_pmx_func>;
			   pwdn-gpios = <&gpio 80 0>;
			   reset-gpios = <&gpio 67 0>;
			   af_2v8-supply = <&ldo10>;
			   avdd_2v8-supply = <&ldo11>;
			   dovdd_1v8-supply = <&voutsw>;
			   dvdd_1v2-supply = <&ldo12>;
			   status = "okay";
			};

			ccic2: ccic@d420a800 {
			   pinctrl-names = "default";
			   pinctrl-0 = <&ccic2_pmx_func>;
			   pwdn-gpios = <&gpio 68 0>;
			   reset-gpios = <&gpio 69 0>;
			   af_2v8-supply = <&ldo10>;
			   avdd_2v8-supply = <&ldo11>;
			   dovdd_1v8-supply = <&voutsw>;
			   dvdd_1v2-supply = <&ldo12>;
			   status = "okay";
			};

			area51_isp: area51_isp@0xD420F000 {
				status = "okay";
			};

			area51_ipc: area51_ipc@0xD4240000 {
				status = "okay";
			};

			vpu-devfreq {
				status = "okay";
			};

			asram: asram@d12a0000 {
				status = "okay";
			};

			adma0: adma@d128d800 {
				interrupts = <82>;
				status = "okay";
			};
			adma1: adma@d128d900 {
				interrupts = <83>;
				status = "okay";
			};
		};

		apb@d4000000 {
			pdma0: pdma@d4000000 {
				status = "okay";
			};

			timer2: timer@d401f000 {
				status = "okay";
			};

			uart2: uart@d4017000 {
				pinctrl-names = "default", "sleep";
				pinctrl-0 = <&uart2_pmx_func1 &uart2_pmx_func2>;
				pinctrl-1 = <&uart2_pmx_func1_sleep &uart2_pmx_func2>;
				edge-wakeup-gpio = <47>; /* GPIO47: UART rx pin */
				status = "okay";
			};

			edgewakeup: edgewakeup@d4019800 {
				status = "okay";
			};

			rtc: rtc@d4010000 {
				status = "okay";
			};

			thermal: thermal@d4013300 {
				status = "okay";
			};

			watchdog: watchdog@d4080000 {
				status = "okay";
			};

			keypad: keypad@d4012000 {
				keypad,num-rows = <2>;
				keypad,num-columns = <1>;
				linux,keymap = <0x00000073
						0x01000072>;
				marvell,debounce-interval = <30>;
				pinctrl-names = "default";
				pinctrl-0 = <&keypad_in_func  &keypad_out_func>;
				status = "okay";
			};

			keyreset {
				compatible = "marvell,keyreset";
				keys-down = <0x73 0x72>;
				keyreset-need-panic;
			};

			ssp0: ssp@d401b000 {
				status = "okay";
			};

			ssp4: ssp@d4039000 {
				status = "okay";
			};

			ssp_dai4: pxa-ssp-dai@4 {
				compatible = "mrvl,pxa-ssp-dai";
				reg = <0x4 0x0>;
				port = <&ssp4>;
				pinctrl-names = "default","ssp";
				pinctrl-0 = <&gssp_gpio>;
				pinctrl-1 = <&gssp_func>;
				ssp-gpio = <&gpio 25 0 &gpio 26 0 &gpio 27 0 &gpio 28 0>;
				dmas = <&pdma0 6 0
					&pdma0 7 0>;
				dma-names = "rx", "tx";
				platform_driver_name = "pdma_platform";
				burst_size = <8>;
				playback_period_bytes = <4096>;
				playback_buffer_bytes = <131072>;
				capture_period_bytes = <4096>;
				capture_buffer_bytes = <131072>;
			};

			/* SSPA port 0 */
			sspa0: sspa@d128dc00 {
				playback_period_bytes = <4096>;
				playback_buffer_bytes = <12288>;
				capture_period_bytes = <4096>;
				capture_buffer_bytes = <12288>;
				status = "okay";
			};

			/* SSPA port 1 */
			sspa1: sspa@d128dd00 {
				playback_period_bytes = <4096>;
				playback_buffer_bytes = <12288>;
				capture_period_bytes = <4096>;
				capture_buffer_bytes = <12288>;
				status = "okay";
			};

			map: map@d1200000 {
				status = "okay";
			};

			gpio: gpio@d4019000 {
				status = "okay";
				/*
				 * In theorical, some gpios could be routed to
				 * multiple pins. So define the gpio-ranges in
				 * board file, not silicon file.
				 */
				gcb0: gpio@d4019000 {
					/* gpio offset, pin offset, nr pins */
					gpio-ranges = <&pmx 0 55 32>;
				};
				gcb1: gpio@d4019004 {
					gpio-ranges = <&pmx 0 87 23>;
				};
				gcb2: gpio@d4019008 {
					gpio-ranges = <&pmx 3 110 29>;
				};
				gcb3: gpio@d4019100 {
					gpio-ranges = <&pmx 0 139 3  &pmx 28 52 1>;
				};
			};
			pmx: pinmux@d401e000 {
				status = "okay";

				/* pin base, nr pins & gpio function */
				pinctrl-single,gpio-range = <
					/*
					 * GPIO number is hardcoded for range at here.
					 * In gpio chip, GPIO number is not hardcoded for range.
					 * Since one gpio pin may be routed to multiple pins,
					 * define these gpio range in pxa910-dkb.dts not pxa910.dtsi.
					 */
					&range 55 55 0	/* GPIO0 ~ GPIO54 */
					&range 110 32 0 /* GPIO67 ~ GPIO98 */
					&range 52 1 0	/* GPIO124 */
				>;

				/* MFP_PULL_LOW | MFP_LPM_FLOAT */
				sdh1_pmx_func1: sdh1_pmx_func1 {
					pinctrl-single,pins = <
						MMC1_DAT7 AF0
						MMC1_DAT6 AF0
						MMC1_DAT5 AF0
						MMC1_DAT4 AF0
						MMC1_WP AF0
					>;
					DS_MEDIUM;PULL_DOWN;EDGE_NONE;LPM_FLOAT;
				};

				/* no pull, no LPM */
				sdh1_pmx_func2: sdh1_pmx_func2 {
					pinctrl-single,pins = <
						MMC1_DAT3 AF0
						MMC1_DAT2 AF0
						MMC1_DAT1 AF0
						MMC1_DAT0 AF0
						MMC1_CMD AF0
					>;
					MFP_DEFAULT;
				};

				/* MFP_LPM_DRIVE_LOW */
				sdh1_pmx_func3: sdh1_pmx_func3 {
					pinctrl-single,pins = <
						MMC1_CLK AF0
					>;
					MFP_LPM_DRIVE_LOW;
				};

				/* MFP_PULL_HIGH */
				sdh1_pmx_func4: sdh1_pmx_func4 {
					pinctrl-single,pins = <
						MMC1_CD AF0
					>;
					DS_MEDIUM;PULL_HIGH;EDGE_NONE;LPM_NONE;
				};

				sdh2_pmx_func1: sdh2_pmx_func1 {
						pinctrl-single,pins = <
							GPIO37 AF1
							GPIO38 AF1
							GPIO39 AF1
							GPIO40 AF1
							GPIO41 AF1
						>;
						MFP_DEFAULT;
				};

				sdh2_pmx_func2: sdh2_pmx_func2 {
						pinctrl-single,pins = <
							GPIO42 AF1
						>;
						MFP_LPM_DRIVE_LOW;
				};

				sdh2_pmx_func3: sdh2_pmx_func3 {
						pinctrl-single,pins = <
							GPIO7 AF0
							GPIO71 AF0
						>;
						DS_MEDIUM;PULL_FLOAT;EDGE_NONE;LPM_NONE;
				};

				sdh2_pmx_func4: sdh2_pmx_func4 {
						pinctrl-single,pins = <
							GPIO8 AF0
							GPIO9 AF0
						>;
						DS_MEDIUM;PULL_LOW;EDGE_NONE;LPM_NONE;
				};

				/* no pull, no LPM */
				sdh3_pmx_func1: sdh3_pmx_func1 {
					pinctrl-single,pins = <
						ND_IO7 AF1
						ND_IO6 AF1
						ND_IO5 AF1
						ND_IO4 AF1
						ND_IO3 AF1
						ND_IO2 AF1
						ND_IO1 AF1
						ND_IO0 AF1
						ND_CLE_SM_OEN AF1
						SM_BEN0 AF2
					>;
					MFP_DEFAULT;
				};

				/* MFP_LPM_DRIVE_LOW */
				sdh3_pmx_func2: sdh3_pmx_func2 {
					pinctrl-single,pins = <
						SM_SCLK AF1
					>;
					MFP_LPM_DRIVE_LOW;
				};

				/* MFP_LPM_FLOAT */
				lcd_pmx_rst: lcd_pmx_rst {
					pinctrl-single,pins = <
						0x78 0x1
					>;
					/* drive strength set value, mask */
					pinctrl-single,drive-strength = <0x1000 0x1800>;
					/* bias set value, enable, disable, mask */
					pinctrl-single,bias-pullup = <0x8000 0xc000 0x8000 0xc000>;
					pinctrl-single,bias-pulldown = <0x8000 0xa000 0x8000 0xa000>;
					/* input schmitt set value, mask */
					pinctrl-single,input-schmitt = <0 0x30>;
					/* set value, enable, disable, mask */
					pinctrl-single,input-schmitt-enable = <0x40 0 0x40 0x40>;
					/* lpm output set value, mask */
					pinctrl-single,lpm-output = <0x288 0x388>;
				};

				uart2_pmx_func1: uart2_pmx_func1 {
					pinctrl-single,pins = <
						GPIO47 AF6
					>;
					MFP_DEFAULT;
				};

				uart2_pmx_func2: uart2_pmx_func2 {
					pinctrl-single,pins = <
						GPIO48 AF6
					>;
					MFP_DEFAULT;
				};

				uart2_pmx_func1_sleep: uart2_pmx_func1_sleep {
					pinctrl-single,pins = <
						GPIO47 AF6
					>;
					DS_MEDIUM;PULL_NONE;EDGE_BOTH;LPM_NONE;
				};

				keypad_in_func: keypad_in_func {
					pinctrl-single,pins = <
						0x0dc 0x1	/* GPIO000_KP_MKIN0 */
						0x0e4 0x1	/* GPIO002_KP_MKIN1 */
					>;
					pinctrl-single,drive-strength = <0x1000 0x1800>;
					pinctrl-single,bias-pullup = <0 0xc000 0 0xc000>;
					pinctrl-single,bias-pulldown = <0 0xa000 0 0xa000>;
					pinctrl-single,input-schmitt = <0 0x30>;
					pinctrl-single,input-schmitt-enable = <0x40 0 0x40 0x40>;
					pinctrl-single,lpm-output = <0x0 0x388>;
				};

				keypad_out_func: keypad_out_func {
					pinctrl-single,pins = <
						0x0e0 0x1	/* GPIO001_KP_MKOUT0 */
					>;
					pinctrl-single,drive-strength = <0x1000 0x1800>;
					pinctrl-single,bias-pullup = <0x8000 0xc000 0x8000 0xc000>;
					pinctrl-single,bias-pulldown = <0x8000 0xa000 0x8000 0xa000>;
					pinctrl-single,input-schmitt = <0 0x30>;
					pinctrl-single,input-schmitt-enable = <0x40 0 0x40 0x40>;
					pinctrl-single,lpm-output = <0x308 0x388>;
				};

				ccic1_pmx_func: ccic1_pmx_func {
					pinctrl-single,pins = <
						0x1e0 0x1
					>;
					pinctrl-single,drive-strength = <0x1000 0x1800>;
					pinctrl-single,bias-pullup = <0 0xc000 0 0xc000>;
					pinctrl-single,bias-pulldown = <0 0xa000 0 0xa000>;
					pinctrl-single,input-schmitt = <0 0x30>;
					pinctrl-single,input-schmitt-enable = <0x40 0 0x40 0x40>;
					pinctrl-single,lpm-output = <0x0 0x388>;
				};

				ccic2_pmx_func: ccic2_pmx_func {
					pinctrl-single,pins = <
						0x1e0 0x1
					>;
					pinctrl-single,drive-strength = <0x1000 0x1800>;
					pinctrl-single,bias-pullup = <0 0xc000 0 0xc000>;
					pinctrl-single,bias-pulldown = <0 0xa000 0 0xa000>;
					pinctrl-single,input-schmitt = <0 0x30>;
					pinctrl-single,input-schmitt-enable = <0x40 0 0x40 0x40>;
					pinctrl-single,lpm-output = <0x0 0x388>;
				};

				twsi0_pmx_func: twsi0_pmx_func {
					/* gpio79/80: AF1 */
					pinctrl-single,pins = <
						0x1e8 0x1
						0x1ec 0x1
					>;
					pinctrl-single,drive-strength = <0x1000 0x1800>;
					pinctrl-single,bias-pullup = <0 0xc000 0 0xc000>;
					pinctrl-single,bias-pulldown = <0 0xa000 0 0xa000>;
					pinctrl-single,input-schmitt = <0 0x30>;
					pinctrl-single,input-schmitt-enable = <0x40 0 0x40 0x40>;
					pinctrl-single,lpm-output = <0x0 0x388>;
				};
				twsi1_pmx_func: twsi1_pmx_func {
					/* gpio87/88: AF5 */
					pinctrl-single,pins = <
						0x208 0x5
						0x20c 0x5
					>;
					pinctrl-single,drive-strength = <0x1000 0x1800>;
					pinctrl-single,bias-pullup = <0 0xc000 0 0xc000>;
					pinctrl-single,bias-pulldown = <0 0xa000 0 0xa000>;
					pinctrl-single,input-schmitt = <0 0x30>;
					pinctrl-single,input-schmitt-enable = <0x40 0 0x40 0x40>;
					pinctrl-single,lpm-output = <0x0 0x388>;
				};
				touch_pins: touch_pins {
					/* gpio 72/75 */
					pinctrl-single,pins = <
						0x01cc 0x0
						0x01d8 0x0
					>;
					pinctrl-single,drive-strength = <0x1000 0x1800>;
					pinctrl-single,bias-pullup = <0 0xc000 0 0xc000>;
					pinctrl-single,bias-pulldown = <0 0xa000 0 0xa000>;
					pinctrl-single,input-schmitt = <0 0x30>;
					pinctrl-single,input-schmitt-enable = <0x40 0 0x40 0x40>;
					pinctrl-single,lpm-output = <0x0 0x388>;

				};
				i2s_func: i2s_func {
					pinctrl-single,pins = <
						0x0130 0x1
						0x0134 0x1
						0x0138 0x1
						0x013c 0x1
					>;
					pinctrl-single,drive-strength = <0x1000 0x1800>;
					pinctrl-single,bias-pullup = <0 0xc000 0 0xc000>;
					pinctrl-single,bias-pulldown = <0 0xa000 0 0xa000>;
					pinctrl-single,input-schmitt = <0 0x30>;
					pinctrl-single,input-schmitt-enable = <0x40 0 0x40 0x40>;
					pinctrl-single,lpm-output = <0x0 0x388>;
				};
				i2s_gpio: i2s_gpio {
					pinctrl-single,pins = <
						0x0130 0x0
						0x0134 0x0
						0x0138 0x0
						0x013c 0x0
					>;
					/* drive strength set value, mask */
					pinctrl-single,drive-strength = <0x1000 0x1800>;
					/* bias set value, enable, disable, mask */
					pinctrl-single,bias-pullup = <0 0xc000 0 0xc000>;
					pinctrl-single,bias-pulldown = <0 0xa000 0 0xa000>;
					/* input schmitt set value, mask */
					pinctrl-single,input-schmitt = <0 0x30>;
					/* set value, enable, disable, mask */
					pinctrl-single,input-schmitt-enable = <0x40 0 0x40 0x40>;
					/* lpm output set value, mask */
					pinctrl-single,lpm-output = <0x288 0x388>;
				};
				/* no pull, no LPM */
				dvc_pmx_func: dvc_pmx_func {
					pinctrl-single,pins = <
						0x220 0x5
						0x224 0x5
					>;
					/* drive strength set value, mask */
					pinctrl-single,drive-strength = <0x1000 0x1800>;
					/* bias set value, enable, disable, mask */
					pinctrl-single,bias-pullup = <0 0xc000 0 0xc000>;
					pinctrl-single,bias-pulldown = <0 0xa000 0 0xa000>;
					/* input schmitt set value, mask */
					pinctrl-single,input-schmitt = <0 0x30>;
					/* set value, enable, disable, mask */
					pinctrl-single,input-schmitt-enable = <0x40 0 0x40 0x40>;
					/* lpm output set value, mask */
					pinctrl-single,lpm-output = <0 0x388>;
				};
				gssp_func: gssp_func {
					pinctrl-single,pins = <
						0x0140 0x1
						0x0144 0x1
						0x0148 0x1
						0x014c 0x1
					>;
					pinctrl-single,drive-strength = <0x1000 0x1800>;
					pinctrl-single,bias-pullup = <0 0xc000 0 0xc000>;
					pinctrl-single,bias-pulldown = <0 0xa000 0 0xa000>;
					pinctrl-single,input-schmitt = <0 0x30>;
					pinctrl-single,input-schmitt-enable = <0x40 0 0x40 0x40>;
					pinctrl-single,lpm-output = <0x0 0x388>;
				};
				gssp_gpio: gssp_gpio {
					pinctrl-single,pins = <
						0x0140 0x0
						0x0144 0x0
						0x0148 0x0
						0x014c 0x0
					>;
					/* drive strength set value, mask */
					pinctrl-single,drive-strength = <0x1000 0x1800>;
					/* bias set value, enable, disable, mask */
					pinctrl-single,bias-pullup = <0 0xc000 0 0xc000>;
					pinctrl-single,bias-pulldown = <0 0xa000 0 0xa000>;
					/* input schmitt set value, mask */
					pinctrl-single,input-schmitt = <0 0x30>;
					/* set value, enable, disable, mask */
					pinctrl-single,input-schmitt-enable = <0x40 0 0x40 0x40>;
					/* lpm output set value, mask */
					pinctrl-single,lpm-output = <0x288 0x388>;
				};
			};

			twsi0: i2c@d4011000 {
				pinctrl-names = "default";
				pinctrl-0 = <&twsi0_pmx_func>;
				status = "okay";

			};

			twsi1: i2c@d4010800 {
				        status = "okay";
					pinctrl-0 = <&twsi1_pmx_func>;

				touch1: s3202@720p {
					compatible = "synaptics,s3202-touch";
					pinctrl-names = "default"; pinctrl-0 = <&touch_pins>;
					reg = <0x22>;
					interrupt-parent = <&gpio>;
					interrupts = <72 0x1>;
					/* IRQF_ONESHOT | IRQF_TRIGGER_FALLING */
					synaptics,irq-flags =  <0x2002>;
					synaptics,irq-gpios = <&gpio 72 0>;
					synaptics,reset-gpios = <&gpio 75 0>;
					synaptics,sensor_res_x = <720>;
					synaptics,sensor_res_y = <1280>;
					synaptics,sensor_max_x = <798>;
					synaptics,sensor_max_y = <1392>;
					synaptics,sensor_margin_x = <39>;
					synaptics,sensor_margin_y = <0>;
					avdd-supply = <&ldo10>;
				};

				touch2: s3202@1080p {
					compatible = "synaptics,s3202-touch";
					pinctrl-names = "default"; pinctrl-0 = <&touch_pins>;
					reg = <0x22>;
					interrupt-parent = <&gpio>;
					interrupts = <72 0x1>;
					/* IRQF_ONESHOT | IRQF_TRIGGER_FALLING */
					synaptics,irq-flags =  <0x2002>;
					synaptics,irq-gpios = <&gpio 72 0>;
					synaptics,reset-gpios = <&gpio 75 0>;
					synaptics,sensor_res_x = <1080>;
					synaptics,sensor_res_y = <1920>;
					synaptics,sensor_max_x = <1080>;
					synaptics,sensor_max_y = <2070>;
					synaptics,sensor_margin_x = <0>;
					synaptics,sensor_margin_y = <0>;
					avdd-supply = <&ldo10>;
				};


			};

			twsi2: i2c@d4037000 {
				status = "okay";

				pmic1: 88pm822@30 {
					compatible = "marvell,88pm800";
					reg = <0x30>;
					interrupts = <0 4 0x4>;
					interrupt-parent = <&gic>;
					interrupt-controller;
					#interrupt-cells = <1>;
					marvell,88pm800-irq-write-clear;

					marvell,88pm800-power-page-addr = <0x31>;
					marvell,88pm800-gpadc-page-addr = <0x32>;

					regulators {
						compatible = "marvell,88pm80x-regulator";

						BUCK1 {
							regulator-compatible = "88PM800-BUCK1";
							regulator-min-microvolt = <600000>;
							regulator-max-microvolt = <1800000>;
							regulator-boot-on;
							regulator-always-on;
						};
						BUCK2 {
							regulator-compatible = "88PM800-BUCK2";
							regulator-min-microvolt = <600000>;
							regulator-max-microvolt = <3300000>;
							regulator-boot-on;
							regulator-always-on;
						};
						BUCK3 {
							regulator-compatible = "88PM800-BUCK3";
							regulator-min-microvolt = <600000>;
							regulator-max-microvolt = <3300000>;
							regulator-boot-on;
							regulator-always-on;
						};
						BUCK4 {
							regulator-compatible = "88PM800-BUCK4";
							regulator-min-microvolt = <600000>;
							regulator-max-microvolt = <3300000>;
							regulator-boot-on;
							regulator-always-on;
						};
						BUCK5 {
							regulator-compatible = "88PM800-BUCK5";
							regulator-min-microvolt = <600000>;
							regulator-max-microvolt = <3950000>;
							regulator-boot-on;
							regulator-always-on;
						};
						LDO1 {
							regulator-compatible = "88PM800-LDO1";
							regulator-min-microvolt = <1700000>;
							regulator-max-microvolt = <3300000>;
							regulator-boot-on;
							regulator-always-on;
						};
						LDO2 {
							regulator-compatible = "88PM800-LDO2";
							regulator-min-microvolt = <1700000>;
							regulator-max-microvolt = <3300000>;
							regulator-boot-on;
							regulator-always-on;
						};
						LDO3 {
							regulator-compatible = "88PM800-LDO3";
							regulator-min-microvolt = <1200000>;
							regulator-max-microvolt = <3300000>;
							regulator-boot-on;
							regulator-always-on;
						};
						ldo4: LDO4 {
							regulator-compatible = "88PM800-LDO4";
							regulator-min-microvolt = <1200000>;
							regulator-max-microvolt = <3300000>;
						};
						ldo5: LDO5 {
							regulator-compatible = "88PM800-LDO5";
							regulator-min-microvolt = <1200000>;
							regulator-max-microvolt = <3300000>;
						};
						LDO6 {
							regulator-compatible = "88PM800-LDO6";
							regulator-min-microvolt = <1200000>;
							regulator-max-microvolt = <3300000>;
							regulator-boot-on;
						};
						LDO7 {
							regulator-compatible = "88PM800-LDO7";
							regulator-min-microvolt = <1200000>;
							regulator-max-microvolt = <3300000>;
							regulator-boot-on;
							regulator-always-on;
						};
						ldo8: LDO8 {
							regulator-compatible = "88PM800-LDO8";
							regulator-min-microvolt = <1200000>;
							regulator-max-microvolt = <3300000>;
							regulator-boot-on;
							regulator-always-on;
						};
						LDO9 {
							regulator-compatible = "88PM800-LDO9";
							regulator-min-microvolt = <1200000>;
							regulator-max-microvolt = <3300000>;
						};
						ldo10: LDO10 {
							regulator-compatible = "88PM800-LDO10";
							regulator-min-microvolt = <1200000>;
							regulator-max-microvolt = <3300000>;
							regulator-boot-on;
							regulator-always-on;
						};
						ldo11: LDO11 {
							regulator-compatible = "88PM800-LDO11";
							regulator-min-microvolt = <1200000>;
							regulator-max-microvolt = <3300000>;
							regulator-boot-on;
						};
						ldo12: LDO12 {
							regulator-compatible = "88PM800-LDO12";
							regulator-min-microvolt = <600000>;
							regulator-max-microvolt = <1500000>;
							regulator-boot-on;
						};
						LDO13 {
							regulator-compatible = "88PM800-LDO13";
							regulator-min-microvolt = <1700000>;
							regulator-max-microvolt = <3300000>;
							regulator-boot-on;
						};
						ldo14: LDO14 {
							regulator-compatible = "88PM800-LDO14";
							regulator-min-microvolt = <1700000>;
							regulator-max-microvolt = <2800000>;
						};
						voutsw: VOUTSW {
							regulator-compatible = "88PM800-VOUTSW";
							regulator-min-microvolt = <1700000>;
							regulator-max-microvolt = <1800000>;
						};
					};

					vibrator: vibrator {
						compatible = "marvell,88pm80x-vibrator";
						min-timeout = <10>;
						duty-cycle = <0x3f>;
					};

					usb: usb {
						compatible = "marvell,88pm80x-usb";
						vbus-gpio = <2>;
						id-gpadc = <0xff>;
					};

					headset {
						compatible = "marvell,88pm80x-headset";
						marvell,switch-name = "h2w";
						marvell,headset-flag = <1>;
						marvell,hook-press-th = <60>;
						marvell,vol-up-press-th = <250>;
						marvell,vol-down-press-th = <500>;
						marvell,mic-det-th = <600>;
						marvell,press-release-th = <600>;
						marvell,micbias-supply = <&ldo14>;
					};

					dvc {
						compatible = "marvell,88pm8xx-dvc";
						/* pm822 dvc affect buck1/3/5, affected 32bit = (1 << 4) | (1 << 2) | (1 << 0)*/
						dvc-affected-buckbits = <21>;
						pinctrl-names = "default";
						pinctrl-0 = <&dvc_pmx_func>;
					};
				};
				pmic2: 88pm805@38 {
					compatible = "marvell,88pm805";
					reg = <0x38>;
					interrupt-parent = <&gpio>;
					interrupts = <124 0x1>;
					marvell,88pm805-irq-write-clear;
				};

				pmic3: 88pm830@68 {
					compatible = "marvell,88pm830";

					reg = <0x68>;
					interrupt-parent = <&gpio>;
					interrupt-controller;
					/* edge falling */
					interrupts = <29 2>;
					#interrupt-cells = <1>;

					/* IRQF_ONESHOT | IRQF_TRIGGER_FALLING */
					marvell,88pm830-irq-flags =  <0x2002>;

					charger {
						compatible = "marvell,88pm830-chg";
						prechg-current = <100>;	/* mA */
						prechg-voltage = <3300>; /* mV */
						prechg-timeout = <32>; /* minute */

						fastchg-eoc = <60>; /* mA */
						fastchg-voltage = <4200>; /* mV */
						fastchg-timeout = <8>; /* hour */

						over-voltage = <4300>; /* mV */

						no-thermal-support = <0>;
						thermal-threshold = <0xf 0xf 0x0 0x0>;

						temp-configure = <0x22>;
						temp-threshold = <150>;

						mppt-weight = <0x2>; /* 25% */
						mppt-period = <0x7>; /* 20ms */
						mppt-start-current = <0xf>; /* 1600mA */

					};

					battery {
						compatible = "marvell,88pm830-bat";

						bat-ntc-support = <1>;
						bat-capacity = <1500>;	/* mAh */
						external-resistor = <200>; /* mohm */
						sleep-period = <1000>; /* second */
						low-threshold = <30>; /* % */
						high-threshold = <50>; /* % */
					};

					usb {
						compatible = "marvell,88pm830-vbus";
						gpadc-number = <1>;
					};

					led {
						compatible = "marvell,88pm830-led";

						flash-en-gpio = <19>;
						flash-txmsk-gpio = <18>;
					};
				};
			};

			acipc: acipc@d401d000 {
				status = "okay";
			};

			seh: seh@d4080000 {
				compatible = "mrvl,seh";
				reg = <0xd4080000 0x100>;
				interrupts = <0 32 0x4>;
				interrupt-names = "CP_TIMER2_3";
				watchdog-type = <1>; /* soc timer */
				timer-num = <2>; /* timer num */
				match-num = <0>; /* match num */
				status = "okay";
			};
		};

		sram: sram@0xd1004000 {
			status = "okay";
		};

		soc-isp {
			status = "okay";
		};

		soc-camera@0 {
			status = "okay";
		};

		soc-camera@1 {
			status = "okay";
		};

		ramoops {
			status = "okay";
		};
	};

	sound {
		compatible = "marvell,mmp-map-snd-card";
		sspa-controllers = <&sspa0 &sspa1>;
	};

	ion {
		marvell,ion-nr = <2>;
		status = "okay";
		heap1 {
			marvell,ion-name = "carveout_heap";
			marvell,ion-type = <2>;
			marvell,ion-id = <2>;
			marvell,ion-base = <0x09000000>;
			marvell,ion-size = <0x01000000>;
		};
		heap2 {
			marvell,ion-name = "system_heap";
			marvell,ion-type = <0>;
			marvell,ion-id = <0>;
		};
	};

	panel1: lg4591 {
		compatible = "marvell,mmp-lg4591";
		marvell,path-name = "mmp_pnpath";
		rst_gpio = <&gpio 4 0>;
		avdd-supply = <&ldo10>;
		status = "okay";
	};

	panel2: r63311 {
		compatible = "marvell,mmp-r63311";
		marvell,path-name = "mmp_pnpath";
		marvell,ddrfreq-qos = <2>; /* DDR_CONSTRAINT_LVL1 */
		rst_gpio = <&gpio 4 0>;
		power_gpio = <&gpio 6 0>;
		bl_gpio = <&gpio 32 0>;
		status = "okay";
	};

	sd8x-rfkill {
		sd-host = <&sdh2>;
		pd-gpio = <&gpio 7 0>;
		rst-gpio = <&gpio 71 0>;
		status = "okay";
	};

};
